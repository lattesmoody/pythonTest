- np.meshgrid() 함수

- 회색 바탕화면 그리기

- 등고선 그리기

- 등고선 그리기 (색 구분) => plt.contourf()

* 행렬 데이터를 이런 저런 곳에 활용한다 이런 뉘앙스로 받아들이기.

- 붓꽃 데이터셋.
관련함수 4개.

- 결측치 처리
* np.isnan() # 결측치인지 확인 (부울 어레이 반환)
* any() # 부울 어레이 항목에 True가 하나라도 포함되어 있는지?

=> 활용: np.isnan(iris_features).any()

=> 활용2(결측치몇개?): np.isnan(iris_features).sum()

=> 활용3(결측치가 없는 행만 추출)

=> 결측치 원복 작업 (원래 값은 0.2)


- 붓꽃 데이터셋 - 품종 정보 
=> 품종 몇 가지?: np.unique() # 범주를 찾아준다.

- 산점도 그리기 # 꽃잎 길이, 꽃잎 너비 
# 관련 함수:


- 격자 무늬 # plt.grid() 

- 배경화면 색 # meshgrid()

- 품종 분류 # plt.contour() / plt.contourf()





- 정규화, 표준화는 필수. (효율적인 성능을 뽑아냄.), 머신러닝할 때 매우 필요함.